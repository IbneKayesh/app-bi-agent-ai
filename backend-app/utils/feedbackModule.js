import Database from "better-sqlite3";
import { config } from "../config/config.js";

// Connect to agent_training.db
const db = new Database(config.db.agentTraining);

// Initialize feedback table if not exists
db.prepare(`
  CREATE TABLE IF NOT EXISTS Feedback (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    query_text TEXT NOT NULL,
    generated_sql TEXT NOT NULL,
    sentiment TEXT CHECK(sentiment IN ('like','dislike')) NOT NULL,
    corrected_sql TEXT,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP
  )
`).run();

/**
 * Record user feedback
 * @param {string} query_text - Original user query
 * @param {string} generated_sql - SQL generated by agent
 * @param {string} sentiment - 'like' or 'dislike'
 * @param {string} corrected_sql - optional, user-corrected SQL
 */
export function recordFeedback({ query_text, generated_sql, sentiment, corrected_sql = null }) {
  const stmt = db.prepare(`
    INSERT INTO Feedback (query_text, generated_sql, sentiment, corrected_sql)
    VALUES (@query_text, @generated_sql, @sentiment, @corrected_sql)
  `);

  stmt.run({ query_text, generated_sql, sentiment, corrected_sql });
}

/**
 * Retrieve feedback for retraining / analysis
 */
export function getFeedback(limit = 100) {
  return db.prepare(`SELECT * FROM Feedback ORDER BY created_at DESC LIMIT ?`).all(limit);
}
